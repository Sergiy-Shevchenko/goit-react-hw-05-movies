{"version":3,"file":"static/js/247.fd9c177f.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCACNC,EAAW,QAEJC,EAAW,mCAAG,8FACZH,EAAAA,EAAAA,IAAA,mCACiBC,EADjB,qBACiCC,IAFrB,mFAAH,qDAMXE,EAAW,mCAAG,WAAMC,GAAN,iFACZL,EAAAA,EAAAA,IAAA,+BACaC,EADb,yBACiCI,EADjC,uBACqDH,EADrD,yBADY,mFAAH,sDAMXI,EAAY,mCAAG,WAAMC,GAAN,iFACbP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,qBAAiDC,IADpC,mFAAH,sDAIZM,EAAY,mCAAG,WAAMD,GAAN,iFACbP,EAAAA,EAAAA,IAAA,iBACDO,EADC,4BACqBN,EADrB,qBACqCC,IAFxB,mFAAH,sDAMZO,EAAY,mCAAG,WAAMF,GAAN,iFACbP,EAAAA,EAAAA,IAAA,gBACFO,EADE,4BACoBN,EADpB,4BAC2CC,IAF9B,mFAAH,qD,yGCgBzB,UAxCa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMT,GAAN,iGAEKC,EAAAA,EAAAA,IAAaD,GAFlB,OAERU,EAFQ,OAGdH,EAAcG,EAAKC,KAAKD,MACxBE,QAAQC,IAAIH,EAAKC,KAAKD,MAJR,gDAMdE,QAAQC,IAAI,SANE,yDAAH,sDASfJ,EAAUN,EACX,GAAE,CAACA,KAGF,8BACyB,IAAtBG,EAAWQ,QACV,iEAEA,wBACGR,EAAWS,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACd,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAO,OAET,wBAAKJ,KACL,uCAAeC,OAPRlB,EADK,OAezB,C","sources":["api/api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '4b93e172d3270cc5f7c85789f0b471e0';\nconst language = 'en-US';\n\nexport const fetchMovies = async () => {\n  return await axios.get(\n    `trending/all/day?api_key=${KEY}&language=${language}`\n  );\n};\n\nexport const fetchSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${KEY}&page=1&query=${query}&?&language=${language}&include_adult=false`\n  );\n};\n\nexport const fetchDetails = async id => {\n  return await axios.get(`movie/${id}?api_key=${KEY}&language=${language}`);\n};\n\nexport const fetchCredits = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=${language}`\n  );\n};\n\nexport const fetchReviews = async id => {\n  return await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&page=1&language=${language}`\n  );\n};\n","import { fetchCredits } from 'api/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castMovies, setCastMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async id => {\n      try {\n        const cast = await fetchCredits(id);\n        setCastMovies(cast.data.cast);\n        console.log(cast.data.cast);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    fetchCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {castMovies.length !== 0 ? (\n        <p>We don't have actors for this movie.</p>\n      ) : (\n        <ul>\n          {castMovies.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                width={180}\n              />\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","KEY","language","fetchMovies","fetchSearch","query","fetchDetails","id","fetchCredits","fetchReviews","movieId","useParams","useState","castMovies","setCastMovies","useEffect","fetchCast","cast","data","console","log","length","map","profile_path","name","character","src","alt","width"],"sourceRoot":""}