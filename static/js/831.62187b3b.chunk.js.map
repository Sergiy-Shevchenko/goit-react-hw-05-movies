{"version":3,"file":"static/js/831.62187b3b.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCACNC,EAAW,QAEJC,EAAW,mCAAG,8FACZH,EAAAA,EAAAA,IAAA,mCACiBC,EADjB,qBACiCC,IAFrB,mFAAH,qDAMXE,EAAW,mCAAG,WAAMC,GAAN,iFACZL,EAAAA,EAAAA,IAAA,+BACaC,EADb,yBACiCI,EADjC,uBACqDH,EADrD,yBADY,mFAAH,sDAMXI,EAAY,mCAAG,WAAMC,GAAN,iFACbP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,qBAAiDC,IADpC,mFAAH,sDAIZM,EAAY,mCAAG,WAAMD,GAAN,iFACbP,EAAAA,EAAAA,IAAA,iBACDO,EADC,4BACqBN,EADrB,qBACqCC,IAFxB,mFAAH,sDAMZO,EAAY,mCAAG,WAAMF,GAAN,iFACbP,EAAAA,EAAAA,IAAA,gBACFO,EADE,4BACoBN,EADpB,4BAC2CC,IAF9B,mFAAH,qD,8IC3BzB,GAAgB,MAAQ,4BAA4B,KAAO,2BAA2B,YAAc,mC,SCkFpG,EA9Ee,WAAO,IAAD,EACnB,GAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8CC,EAAAA,EAAAA,WAC5C,kCAAMF,EAAaG,IAAI,gBAAvB,QAAmC,EAAnC,IADF,eAAOC,EAAP,KAAwBC,EAAxB,KAIA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KAEMC,GAAaC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,iGAEDnB,EAAAA,EAAAA,IAAYmB,GAFX,OAEhBC,EAFgB,OAItBN,EAAgBM,EAAOC,KAAKC,SAJN,gDAOtBC,QAAQC,IAAI,SAPU,yDAAH,sDAUnBb,GAAiBO,EAAkBP,EACxC,GAAE,CAACA,IAqBJ,OACE,iCACE,kBAAMc,UAAWC,EAAAA,MAAWC,SAnBX,SAAAC,GACnBA,EAAMC,iBACN,IAAQC,EAAUF,EAAMG,OAAOX,OAAvBU,MAERlB,EAAmBkB,EACpB,EAcG,WACE,kBACEE,KAAK,OACLC,KAAK,SACLH,MAAK,UAAEvB,EAAaG,IAAI,gBAAnB,QAA+B,GACpCwB,SAjBkB,SAAC,GAA2B,IAAfJ,EAAc,EAAxBC,OAAUD,MAErCtB,EADwB,KAAVsB,EAAe,CAAE7B,MAAO6B,GAAU,CAAC,GAGnC,KAAVA,GACFlB,EAAmB,GAEtB,EAWOuB,aAAa,MACbC,WAAS,EACTC,UAAQ,EACRC,YAAY,kBAEd,mBAAQN,KAAK,SAAb,wBAGF,eAAIP,UAAWC,EAAAA,KAAf,SACGb,EAAa0B,KAAI,YAAoB,IAAjBpC,EAAgB,EAAhBA,GAAIqC,EAAY,EAAZA,MACvB,OACE,eAAaf,UAAWC,EAAAA,KAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EAAAA,KACXe,GAAE,kBAAatC,GACfuC,MAAO,CAAEC,KAAM5B,GAHjB,SAKGyB,KANIrC,EAUZ,QAIR,ECvED,EARe,WACb,OACE,+BACE,SAAC,EAAD,KAGL,C","sources":["api/api.jsx","webpack://react-homework-template/./src/components/Search/SearchStyles.module.css?24ee","components/Search/Search.jsx","components/Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '4b93e172d3270cc5f7c85789f0b471e0';\nconst language = 'en-US';\n\nexport const fetchMovies = async () => {\n  return await axios.get(\n    `trending/all/day?api_key=${KEY}&language=${language}`\n  );\n};\n\nexport const fetchSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${KEY}&page=1&query=${query}&?&language=${language}&include_adult=false`\n  );\n};\n\nexport const fetchDetails = async id => {\n  return await axios.get(`movie/${id}?api_key=${KEY}&language=${language}`);\n};\n\nexport const fetchCredits = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=${language}`\n  );\n};\n\nexport const fetchReviews = async id => {\n  return await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&page=1&language=${language}`\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchStyles_input__F2KTr\",\"item\":\"SearchStyles_item__Isb+q\",\"movie__list\":\"SearchStyles_movie__list__qG8lk\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearch } from 'api/api';\nimport css from './SearchStyles.module.css';\n\nconst Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovieName, setSearchMovieName] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  const [moviesSearch, setMoviesSearch] = useState([]);\n\n  const locacation = useLocation();\n\n  useEffect(() => {\n    const fetchSearchMovies = async text => {\n      try {\n        const search = await fetchSearch(text);\n\n        setMoviesSearch(search.data.results);\n        // console.log(search.data.results);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    if (searchMovieName) fetchSearchMovies(searchMovieName);\n  }, [searchMovieName]);\n\n  // console.log(moviesSearch.length)\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { value } = event.target.search;\n    // console.log(value);\n    setSearchMovieName(value);\n  };\n\n  const updateQueryString = ({ target: { value } }) => {\n    const param = value !== '' ? { query: value } : {};\n    setSearchParams(param);\n\n    if (value === '') {\n      setSearchMovieName('');\n    }\n  };\n\n  // if (moviesSearch.length === 0)\n  return (\n    <>\n      <form className={css.input} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={searchParams.get('query') ?? ''}\n          onChange={updateQueryString}\n          autoComplete=\"off\"\n          autoFocus\n          required\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul className={css.list}>\n        {moviesSearch.map(({ id, title }) => {\n          return (\n            <li key={id} className={css.item}>\n              <Link\n                className={css.item}\n                to={`/movies/${id}`}\n                state={{ from: locacation }}\n              >\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Search;\n","import Search from 'components/Search/Search';\n\nconst Movies = () => {\n  return (\n    <>\n      <Search />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","language","fetchMovies","fetchSearch","query","fetchDetails","id","fetchCredits","fetchReviews","useSearchParams","searchParams","setSearchParams","useState","get","searchMovieName","setSearchMovieName","moviesSearch","setMoviesSearch","locacation","useLocation","useEffect","fetchSearchMovies","text","search","data","results","console","log","className","css","onSubmit","event","preventDefault","value","target","type","name","onChange","autoComplete","autoFocus","required","placeholder","map","title","to","state","from"],"sourceRoot":""}